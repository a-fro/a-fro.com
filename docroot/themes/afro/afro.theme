<?php
/**
 * @file
 * Contains theme override and preprocess functions.
 */

function afro_preprocess_html(&$variables) {

  // Set up meta tags.
  // Modern IE & chrome-frame rendering engine tag.
  $rendering_meta = array(
    '#tag' => 'meta',
    '#attributes' => array(
      'http-equiv' => 'X-UA-Compatible',
      'content' => 'IE=edge,chrome=1',
    ),
  );

  // Add a theme-specific css class to the body tag.
  $variables['attributes']['class'][] = 'afro';
}

/**
 * Implements hook_page_alter().
 */
function afro_page_alter(&$page) {
  if (file_exists('.drupal_streamline_guard_running')) {
    // The guard-livereload gem includes a copy of the livereload.js script at the same
    // port configured in the livereload guard in the Guardfile
    // Other livereload options available: &mindelay=1000&maxdelay=60000
    $guard_livereload_js_uri = 'http://localhost:35777/livereload.js?host=localhost&port=35777&snipver=1';
    $page['#attached']['js'][] = $guard_livereload_js_uri;
  }
}

function afro_preprocess_region(&$variables) {
  $variables['attributes']['class'][] = 'clearfix';
}

function afro_css_alter(&$css) {
  $theme_path = drupal_get_path('theme', 'afro');
// Add googlefonts.
  $googlefonts = '//fonts.googleapis.com/css?family=Merriweather:300,300italic,700,700italic,400,400italic|Merriweather+Sans:400,400italic,700,700italic,300italic,300';
  $css[$googlefonts] = array(
    'data' => $googlefonts,
    'type' => 'external',
    'every_page' => TRUE,
    'media' => 'all',
    'preprocess' => FALSE,
    'group' => CSS_AGGREGATE_THEME,
    'browsers' => array('IE' => TRUE, '!IE' => TRUE),
    'weight' => -1,
  );

   // Add FontAwesome.
  $fontawesome = '//netdna.bootstrapcdn.com/font-awesome/4.0.1/css/font-awesome.min.css';
  $css[$fontawesome] = array(
    'data' => $fontawesome,
    'type' => 'external',
    'every_page' => TRUE,
    'media' => 'all',
    'preprocess' => FALSE,
    'group' => CSS_AGGREGATE_THEME,
    'browsers' => array('IE' => TRUE, '!IE' => TRUE),
    'weight' => -2,
  );
}

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function afro_preprocess_page(&$variables) {

  // Normally we could attach libraries via hook_page_alter(), but when the
  // database is inactive it's not called so we add them here.
  $libraries = array(
    '#attached' => array(
      'library' => array(
        'afro/afro.corescripts',
      ),
    ),
  );
  drupal_render($libraries);
}
